# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 1000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what tipes to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';


    # Upstreams

    upstream website {
        server web:220;
    }


    # Https redirect
    server {
        listen 80;
        server_name af.shvarev.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }



    # CHAT CONFIG
    server {
        listen 443 ssl;
        server_name af.shvarev.com;

        ssl_certificate /etc/letsencrypt/live/af.shvarev.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/af.shvarev.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        client_max_body_size 15M;

        # save logs here
        access_log /var/log/nginx/access.log compression;

        # where the root here
        root /var/www;
        # what file to server as index
        index index.html;

        # favicon.ico
        location /favicon.ico {
            root /var/www/django/static/images/;
        }

        # Media: images, icons, video, audio, HTC
        location ~* ^/(static|media)/ {
            root /var/www/django/;
            try_files $uri $uri/ =404;
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin *;
        }

        location / {
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_connect_timeout 20s;
            proxy_read_timeout 30s;
            proxy_send_timeout 20s;

            proxy_pass http://website/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_redirect off;
        }
    }


    # Other domains
    server {
        listen 80 default_server;
        server_name "";
        return 444;
    }
}
